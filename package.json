{
	"name": "fabricstudio",
	"displayName": "Fabric Studio",
	"description": "Fabric Studio extension for VSCode",
	"version": "2.0.0",
	"publisher": "GerhardBrueckl",
	"icon": "resources/fabric_studio_extension.png",
	"author": {
		"name": "Gerhard Brueckl"
	},
	"contributors": [
		"Gerhard Brueckl"
	],
	"license": "MIT",
	"homepage": "https://github.com/gbrueckl/FabricStudio/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/gbrueckl/FabricStudio"
	},
	"bugs": {
		"url": "https://github.com/gbrueckl/FabricStudio/issues",
		"email": "FabricStudio@gbrueckl.at"
	},
	"qna": "https://github.com/gbrueckl/FabricStudio/issues",
	"sponsor": {
		"url": "https://github.com/sponsors/gbrueckl"
	},
	"engines": {
		"vscode": "^1.82.0"
	},
	"galleryBanner": {
		"color": "#0ea5ff",
		"theme": "dark"
	},
	"categories": [
		"Azure",
		"Extension Packs",
		"Other"
	],
	"keywords": [
		"Microsoft",
		"Fabric",
		"Studio",
		"REST",
		"API",
		"PowerBI",
		"Data",
		"Analytics"
	],
	"activationEvents": [
		"onNotebook:fabric-notebook",
		"onFileSystem:fabric"
	],
	"main": "./dist/node/extension.js",
	"browser": "./dist/web/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": "FabricStudio",
				"properties": {
					"fabricStudio.tenantId": {
						"type": "string",
						"description": "(Optional) A custom TenantID to connect to a remote Tenant where you are a guest user.",
						"default": null
					},
					"fabricStudio.clientId": {
						"type": "string",
						"markdownDescription": "(Optional) A custom ClientID/AAD Application to use when interacting with Fabric REST APIs.",
						"default": null
					},
					"fabricStudio.workspaceFilter": {
						"type": "string",
						"markdownDescription": "(Optional) A regex to filter workspaces by name. Only workspaces matching this regex will be shown in the Fabric Studio Workspaces view.",
						"examples": [
							"Project A|Sales",
							"\\[TEST]|\\[PROD]"
						]
					},
					"fabricStudio.connectionFilter": {
						"type": "string",
						"markdownDescription": "(Optional) A regex to filter connections. Only connections where the definition is matching this regex will be shown in the Fabric Studio Connections view.",
						"examples": [
							"\\.database\\.windows\\.net|\\.dfs\\.core\\.windows\\.net",
							"\"credentialType\": \"Basic\""
						]
					},
					"fabricStudio.capacityFilter": {
						"type": "string",
						"markdownDescription": "(Optional) A regex to filter capacities. Only capacities where the definition is matching this regex will be shown in the Fabric Studio Capacities view.",
						"examples": [
							"F2",
							"West Europe"
						]
					},
					"fabricStudio.adminFilter": {
						"type": "string",
						"markdownDescription": "(Optional) A regex to filter Admin Settings. Only settings where the definition is matching this regex will be shown in the Fabric Studio Admin view.",
						"examples": [
							"Service Principal",
							"API"
						]
					},
					"fabricStudio.itemTypeFormats": {
						"type": "array",
						"markdownDescription": "(Optional) A list of [Fabric Item Types](https://learn.microsoft.com/en-us/rest/api/fabric/core/items/list-items?tabs=HTTP#itemtype) (plural, with 's' at the end) with an optional [Format](https://learn.microsoft.com/en-us/rest/api/fabric/articles/item-management/definitions/notebook-definition#supported-formats) as list of objects.",
						"scope": "window",
						"items": {
							"type": "object",
							"properties": {
								"itemType": {
									"type": "string",
									"markdownDescription": "The ItemType to configure the file format for.",
									"required": true,
									"enum": [
										"CopyJobs",
										"Dataflows",
										"DataPipelines",
										"Eventhouses",
										"GraphQLApis",
										"HLSCohorts",
										"KQLDatabases",
										"KQLDashboards",
										"KQLQuerysets",
										"MirroredAzureDatabricksCatalogs",
										"MirroredDatabases",
										"MountedDataFactories",
										"Environments",
										"Notebooks",
										"Reports",
										"SemanticModels",
										"KQLDashboards",
										"Eventstreams",
										"Reflexes",
										"SparkJobDefinitions",
										"VariableLibraries"
									]
								},
								"format": {
									"type": "string",
									"markdownDescription": "The file extension used when downloading the specified ItemType.",
									"required": false
								},
								"publishOnSave": {
									"type": "boolean",
									"markdownDescription": "If true, the item will be published to Fabric when the file is saved.",
									"required": false,
									"default": false
								},
								"compactView": {
									"type": "boolean",
									"markdownDescription": "[FOR FUTURE USE] If true, the item folder will not be displayed and instead only the content-file will be shown. Only supported for items that have only a single definition file.",
									"required": false,
									"default": false
								},
								"useItemNameAsFileName": {
									"type": "boolean",
									"markdownDescription": "If true, the item name will be used as the file name when downloading the item. This helps when working with multiple e.g. pipelines/notebooks/... at the same time. This setting is only supported for items that have only a single definition file.",
									"required": false,
									"default": false
								}
							}
						}
					},
					"fabricStudio.logLevel": {
						"type": "integer",
						"enum": [
							0,
							1,
							2,
							3,
							4,
							5
						],
						"enumItemLabels": [
							"None",
							"Trace",
							"Debug",
							"Info",
							"Warning",
							"Error"
						],
						"markdownEnumDescriptions": [
							"No messages are logged with this level.",
							"All messages are logged with this level.",
							"Messages with debug and higher log level are logged with this level.",
							"Messages with info and higher log level are logged with this level.",
							"Messages with warning and higher log level are logged with this level.",
							"Only error messages are logged with this level."
						],
						"default": 3,
						"markdownDescription": "The log level to use for the extension. 0 = Off, 1 = Trace, 2 = Debug, 3 = Info, 4 = Warning, 5 = Error."
					},
					"fabricStudio.iconStyle": {
						"type": "string",
						"enum": [
							"mono",
							"color"
						],
						"default": "mono",
						"markdownDescription": "Which set of icons to use for the different Fabric item types."
					},
					"fabricStudio.showProWorkspaces": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Whether regular Pro workspaces without a capacity should be shown or not. This might make sense for Power BI items as you can still use the TMDL/PBIR editor of Fabric Studio."
					},
					"fabricStudio.workspaceViewGrouping": {
						"type": "string",
						"description": "The grouping to use for the Fabric Studio Workspaces view.",
						"enum": [
							"by ItemType",
							"by Folder"
						],
						"default": "by Folder"
					}
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "fabricstudio",
					"title": "Fabric Studio",
					"icon": "resources/fabric_studio_sidebar.png"
				}
			]
		},
		"views": {
			"fabricstudio": [
				{
					"id": "FabricStudioWorkspaces",
					"name": "Fabric Workspaces",
					"icon": "$(list-tree)"
				},
				{
					"id": "FabricStudioDeploymentPipelines",
					"name": "Deployment Pipelines",
					"icon": "$(debug-step-over)"
				},
				{
					"id": "FabricStudioConnections",
					"name": "Connections",
					"icon": "$(extensions-remote)"
				},
				{
					"id": "FabricStudioCapacities",
					"name": "Capacities",
					"icon": "$(gear)"
				},
				{
					"id": "FabricStudioAdmin",
					"name": "Admin",
					"icon": "$(briefcase)"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "FabricStudioWorkspaces",
				"contents": "Please log in to VSCode with a Microsoft Account first!\n[Login](command:FabricStudio.initialize)"
			},
			{
				"view": "FabricStudioDeploymentPipelines",
				"contents": "Please log in to VSCode with a Microsoft Account first!\n[Login](command:FabricStudio.initialize)"
			},
			{
				"view": "FabricStudioConnections",
				"contents": "Please log in to VSCode with a Microsoft Account first!\n[Login](command:FabricStudio.initialize)"
			},
			{
				"view": "FabricStudioCapacities",
				"contents": "Please log in to VSCode with a Microsoft Account first!\n[Login](command:FabricStudio.initialize)"
			},
			{
				"view": "FabricStudioAdmin",
				"contents": "Please log in to VSCode with a Microsoft Account first!\n[Login](command:FabricStudio.initialize)"
			}
		],
		"commands": [
			{
				"category": "FabricStudio",
				"command": "FabricStudio.initialize",
				"title": "Initialize FabricStudio"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.changeUser",
				"title": "Change User"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Workspaces.refresh",
				"title": "Refresh Workspaces",
				"icon": "$(refresh)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Workspaces.filter",
				"title": "Filter Workspaces",
				"icon": "$(filter)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Workspaces.editItems",
				"title": "Edit Items",
				"icon": "$(pencil)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Workspace.manageSourceControl",
				"title": "Manage Source Control",
				"icon": "$(source-control)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.WorkspaceRoleAssignment.update",
				"title": "Update",
				"icon": "$(pencil)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.DeploymentPipelines.refresh",
				"title": "Refresh Workspaces",
				"icon": "$(refresh)"
			},
			{
				"command": "FabricStudio.Item.openNewNotebook",
				"title": "Open in Fabric API Notebook",
				"icon": "$(notebook)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.updateQuickPickList",
				"title": "Update Quick Pick List",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.openInFabric",
				"title": "Open in Fabric Service",
				"icon": "$(globe)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.editDefinition",
				"title": "Edit",
				"icon": "$(pencil)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.editTMDL",
				"title": "Edit using TMDL",
				"icon": "$(pencil)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.editPBIR",
				"title": "Edit using PBIR",
				"icon": "$(pencil)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.showDefinition",
				"title": "Show Definition",
				"icon": "$(json)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.copyIdToClipboard",
				"title": "Copy ID to Clipboard",
				"icon": "$(clippy)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.copyNameToClipboard",
				"title": "Copy Name to Clipboard",
				"icon": "$(clippy)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.copyPathToClipboard",
				"title": "Copy API Path to Clipboard",
				"icon": "$(clippy)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.copyPropertiesToClipboard",
				"title": "Copy Properties to Clipboard",
				"icon": "$(clippy)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.insertPath",
				"title": "Insert Path",
				"icon": "$(code)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.browseInOneLake",
				"title": "Browse in OneLake",
				"icon": "$(link-external)",
				"category": "Fabric.Item"
			},
			{
				"command": "FabricStudio.Item.delete",
				"title": "Delete",
				"icon": "$(close)",
				"category": "Fabric.Item"
			},
			{
				"command": "FabricStudio.Item.publishToFabric",
				"title": "Publish to Fabric",
				"icon": "$(cloud-upload)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Item.reloadFromFabric",
				"title": "Reload from Fabric",
				"icon": "$(cloud-download)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.FS.reloadFromFabric",
				"title": "Reload from Fabric",
				"icon": "$(cloud-download)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.FS.openInFabric",
				"title": "Open in Fabric",
				"icon": "$(globe)",
				"category": "Fabric"
			},
			{
				"command": "FabricStudio.FS.publishToFabric",
				"title": "Publish to Fabric",
				"icon": "$(cloud-upload)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.FS.publishItem",
				"title": "Publish via Fabric Studio",
				"icon": "$(cloud-upload)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Lakehouse.copySQLConnectionString",
				"title": "Copy SQL ConnectionString",
				"icon": "$(debug-disconnect)",
				"category": "FabricStudio.Lakehouse"
			},
			{
				"command": "FabricStudio.Lakehouse.copySQLEndpoint",
				"title": "Copy SQL Endpoint",
				"icon": "$(debug-disconnect)",
				"category": "FabricStudio.Lakehouse"
			},
			{
				"command": "FabricStudio.Lakehouse.copyOneLakeFilesPath",
				"title": "Copy OneLake Files Path",
				"icon": "$(file-binary)",
				"category": "FabricStudio.Lakehouse"
			},
			{
				"command": "FabricStudio.Lakehouse.copyOneLakeTablesPath",
				"title": "Copy OneLake Tables Path",
				"icon": "$(layout-panel-justify)",
				"category": "FabricStudio.Lakehouse"
			},
			{
				"command": "FabricStudio.Lakehouse.Table.maintain",
				"title": "Run Maintainance Job",
				"icon": "$(combine)",
				"category": "FabricStudio.Lakehouse"
			},
			{
				"command": "FabricStudio.SQLEndpoint.syncMetadata",
				"title": "Sync Metadata",
				"icon": "$(refresh)",
				"category": "FabricStudio.SQLEndpoint"
			},
			{
				"command": "FabricStudio.MirroredDatabase.startMirroring",
				"title": "Start Mirroring",
				"icon": "$(debug-start)",
				"category": "FabricStudio.MirroredDatabase"
			},
			{
				"command": "FabricStudio.MirroredDatabase.stopMirroring",
				"title": "Stop Mirroring",
				"icon": "$(debug-pause)",
				"category": "FabricStudio.MirroredDatabase"
			},
			{
				"command": "FabricStudio.MirroredDatabase.updateMirroringStatus",
				"title": "Refresh Mirroring Status",
				"icon": "$(refresh)",
				"category": "FabricStudio.MirroredDatabase"
			},
			{
				"command": "FabricStudio.GrapqhQLApi.copyEndpoint",
				"title": "Copy GraphQL Endpoint",
				"icon": "$(graph-scatter)",
				"category": "FabricStudio.GrapqhQLApi"
			},
			{
				"command": "FabricStudio.GIT.refresh",
				"title": "Refresh",
				"icon": "$(refresh)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.updateFromRepository",
				"title": "Update from Repository",
				"icon": "$(repo-sync)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.commitStagedChanges",
				"title": "Commit",
				"icon": "$(check)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.discardChanges",
				"title": "Discard Changes",
				"icon": "$(discard)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.stageChanges",
				"title": "Stage Changes",
				"icon": "$(plus)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.openFile",
				"title": "Open File",
				"icon": "$(go-to-file)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.GIT.unstageChanges",
				"title": "Unstage Changes",
				"icon": "$(remove)",
				"category": "Fabric.GIT"
			},
			{
				"command": "FabricStudio.DeploymentPipelines.deploySelection",
				"title": "Deploy Selection to next Stage",
				"icon": "$(live-share)",
				"category": "Fabric.Deployment"
			},
			{
				"command": "FabricStudio.DeploymentPipelines.deployItem",
				"title": "Deploy to next Stage",
				"icon": "$(live-share)",
				"category": "Fabric.Deployment"
			},
			{
				"command": "FabricStudio.Notebook.run",
				"title": "Run Notebook",
				"icon": "$(play)",
				"category": "Fabric.Notebook"
			},
			{
				"command": "FabricStudio.DataPipeline.run",
				"title": "Run DataPipeline",
				"icon": "$(play)",
				"category": "Fabric.DataPipeline"
			},
			{
				"command": "FabricStudio.SparkJob.run",
				"title": "Run Spark Job",
				"icon": "$(play)",
				"category": "Fabric.SparkJob"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Connections.refresh",
				"title": "Refresh Connections",
				"icon": "$(refresh)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Connections.filter",
				"title": "Filter Connections",
				"icon": "$(filter)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Capacities.refresh",
				"title": "Refresh Capacities",
				"icon": "$(refresh)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Capacities.filter",
				"title": "Filter Capacities",
				"icon": "$(filter)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.OneLake.resetCache",
				"title": "Reset OneLake Cache",
				"icon": "$(file-symlink-directory)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Admin.refresh",
				"title": "Refresh Admin Settings",
				"icon": "$(refresh)"
			},
			{
				"category": "FabricStudio",
				"command": "FabricStudio.Admin.filter",
				"title": "Filter Admin Settings",
				"icon": "$(filter)"
			},
			{
				"command": "FabricStudio.Admin.showDefinition",
				"title": "Show Definition",
				"icon": "$(json)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.PowerBI.downloadPBIP",
				"title": "Download as PowerBI Project (PBIP)",
				"icon": "$(project)",
				"category": "FabricStudio"
			},
			{
				"command": "FabricStudio.Api.CopyAccessToken",
				"title": "Copy Fabric API Access Token",
				"category": "FabricStudio"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "FabricStudio.Workspaces.refresh",
					"when": "view == FabricStudioWorkspaces",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Workspaces.filter",
					"when": "view == FabricStudioWorkspaces",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Workspaces.editItems",
					"when": "view == FabricStudioWorkspaces",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.DeploymentPipelines.refresh",
					"when": "view == FabricStudioDeploymentPipelines",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.DeploymentPipelines.deploySelection",
					"when": "view == FabricStudioDeploymentPipelines",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Item.openNewNotebook",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Connections.refresh",
					"when": "view == FabricStudioConnections",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Connections.filter",
					"when": "view == FabricStudioConnections",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Capacities.refresh",
					"when": "view == FabricStudioCapacities",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Capacities.filter",
					"when": "view == FabricStudioCapacities",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Admin.refresh",
					"when": "view == FabricStudioAdmin",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Admin.filter",
					"when": "view == FabricStudioAdmin",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "FabricStudio.Item.openNewNotebook",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,OPEN_API_NOTEBOOK,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Item.openInFabric",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,OPEN_IN_BROWSER,.*/",
					"group": "7_open"
				},
				{
					"command": "FabricStudio.Item.copyIdToClipboard",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,COPY_ID,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Item.copyNameToClipboard",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,COPY_NAME,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Item.copyPathToClipboard",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,COPY_PATH,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Item.copyPropertiesToClipboard",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)|(FabricStudioConnections)/ && viewItem =~ /.*,COPY_PROPERTIES,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Item.editDefinition",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,EDIT_DEFINITION,.*/",
					"group": "2_edit"
				},
				{
					"command": "FabricStudio.Item.editTMDL",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,EDIT_TMDL,.*/",
					"group": "2_edit"
				},
				{
					"command": "FabricStudio.Item.editPBIR",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,EDIT_PBIR,.*/",
					"group": "2_edit"
				},
				{
					"command": "FabricStudio.Item.insertPath",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioDeploymentPipelines)/ && viewItem =~ /.*,INSERT_PATH,.*/",
					"group": "inline"
				},
				{
					"command": "FabricStudio.Item.browseInOneLake",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,BROWSE_IN_ONELAKE,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Item.delete",
					"when": "view =~ /(FabricStudioWorkspaces)|(FabricStudioConnections)/ && viewItem =~ /.*,DELETE,.*/",
					"group": "3_delete"
				},
				{
					"command": "FabricStudio.Item.publishToFabric",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,PUBLISH,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Item.reloadFromFabric",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,RELOAD_FROM_FABRIC,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Lakehouse.copySQLConnectionString",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,COPY_SQL_CONNECTION_STRING,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Lakehouse.copySQLEndpoint",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,COPY_SQL_ENDPOINT,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Lakehouse.copyOneLakeFilesPath",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,COPY_ONELAKE_FILES_PATH,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Lakehouse.copyOneLakeTablesPath",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,COPY_ONELAKE_TABLES_PATH,.*/",
					"group": "6_copypath"
				},
				{
					"command": "FabricStudio.Lakehouse.Table.maintain",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,LAKEHOUSETABLE,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.SQLEndpoint.syncMetadata",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,SYNC_METADATA,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.MirroredDatabase.startMirroring",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,START_MIRRORING,.*/",
					"group": "3_compare"
				},
				{
					"command": "FabricStudio.MirroredDatabase.stopMirroring",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,STOP_MIRRORING,.*/",
					"group": "3_compare"
				},
				{
					"command": "FabricStudio.MirroredDatabase.updateMirroringStatus",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,UPDATE_MIRRORING_STATUS,.*/",
					"group": "3_compare"
				},
				{
					"command": "FabricStudio.GrapqhQLApi.copyEndpoint",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,COPY_GRAPHQLAPI_ENDPOINT,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.Workspace.manageSourceControl",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,WORKSPACE,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.WorkspaceRoleAssignment.update",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,UPDATE_ROLE_ASSIGNMENT,.*/",
					"group": "2_update"
				},
				{
					"command": "FabricStudio.Notebook.run",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,NOTEBOOK,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.DataPipeline.run",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,DATAPIPELINE,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.SparkJob.run",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,SPARKJOBDEFINITION,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.DeploymentPipelines.deployItem",
					"when": "view == FabricStudioDeploymentPipelines && viewItem =~ /.*,DEPLOY,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.OneLake.resetCache",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,RESET_CACHE,.*/",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.PowerBI.downloadPBIP",
					"when": "view == FabricStudioWorkspaces && viewItem =~ /.*,DOWNLOAD_PBIP,.*/",
					"group": "2_edit"
				}
			],
			"explorer/context": [
				{
					"command": "FabricStudio.FS.publishToFabric",
					"when": "resourceScheme == fabric && resource =~ /^fabric:[\\/]+workspaces\\/[^\\/]*?\\/[^\\/]*?\\/[^\\/]*?$/",
					"group": "1_fabric"
				},
				{
					"command": "FabricStudio.FS.openInFabric",
					"when": "resourceScheme == fabric && resource =~ /^fabric:(([\\/]+[^\\/]+?)?|([\\/]+[^\\/]+?){4})$/",
					"group": "1_fabric"
				},
				{
					"command": "FabricStudio.FS.reloadFromFabric",
					"when": "resourceScheme == fabric",
					"group": "1_fabric"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.CopyJob(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/CopyJobs\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Dataflow(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Dataflows\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.DataPipeline(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/DataPipelines\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Eventhouse(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Eventhouses\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.GraphQLApi(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/GraphQLApis\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.HLSCohort(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/HLSCohorts\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.KQLDatabase(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/KQLDatabases\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.KQLDashboard(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/KQLDashboards\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.KQLQueryset(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/KQLQuerysets\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.MirroredDatabase(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/MirroredDatabases\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.MountedDataFactory(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/MountedDataFactories\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Environment(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Environments\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Notebook(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Notebooks\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Report(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Reports\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.SemanticModel(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/SemanticModels\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.KQLDashboard(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/KQLDashboards\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Eventstream(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Eventstreams\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.Reflex(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/Reflexes\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.SparkJobDefinition(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/SparkJobDefinitions\\/.*/)",
					"group": "2_workspace"
				},
				{
					"command": "FabricStudio.FS.publishItem",
					"when": "(resourcePath =~ /.*\\.VariableLibrary(\\\\|$).*/) || (resourceScheme == fabric && resourcePath =~ /.*\\/VariableLibraries\\/.*/)",
					"group": "2_workspace"
				}
			],
			"scm/title": [
				{
					"command": "FabricStudio.GIT.refresh",
					"when": "scmProvider == fabric-git",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.GIT.commitStagedChanges",
					"when": "scmProvider == fabric-git",
					"group": "navigation"
				},
				{
					"command": "FabricStudio.GIT.updateFromRepository",
					"when": "scmProvider == fabric-git",
					"group": "navigation"
				}
			],
			"scm/resourceGroup/context": [
				{
					"command": "FabricStudio.GIT.stageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.discardChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.openFile",
					"when": "scmProvider == fabric-git",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.unstageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == stagedChanges",
					"group": "1_modification"
				}
			],
			"scm/resourceState/context": [
				{
					"command": "FabricStudio.GIT.stageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.discardChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.openFile",
					"when": "scmProvider == fabric-git",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.unstageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == stagedChanges",
					"group": "1_modification"
				}
			],
			"scm/resourceFolder/context": [
				{
					"command": "FabricStudio.GIT.stageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.discardChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == changes",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.openFile",
					"when": "scmProvider == fabric-git",
					"group": "1_modification"
				},
				{
					"command": "FabricStudio.GIT.unstageChanges",
					"when": "scmProvider == fabric-git && scmResourceGroup == stagedChanges",
					"group": "1_modification"
				}
			]
		},
		"notebooks": [
			{
				"type": "fabric-notebook",
				"displayName": "Fabric Notebook",
				"selector": [
					{
						"filenamePattern": "*.fabnb"
					}
				]
			}
		],
		"languages": [
			{
				"id": "fabric-api",
				"extensions": [
					".fabnb"
				],
				"icon": {
					"light": "./resources/icons/fileIcons/fabric_notebook.png",
					"dark": "./resources/icons/fileIcons/fabric_notebook.png"
				}
			},
			{
				"id": "graphql",
				"extensions": [
					".fabnb"
				],
				"icon": {
					"light": "./resources/icons/fileIcons/fabric_notebook.png",
					"dark": "./resources/icons/fileIcons/fabric_notebook.png"
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"test": "vscode-test-web --extensionDevelopmentPath=. --extensionTestsPath=dist/web/extension.js",
		"open-in-browser": "vscode-test-web --extensionDevelopmentPath=. .",
		"combine-swagger": "ts-node utils/Swagger/combine-swagger.ts",
		"download-api-specs": "ts-node utils/Swagger/download-api-specs.ts"
	},
	"devDependencies": {
		"@apidevtools/swagger-parser": "^12.0.0",
		"@types/glob": "^8.1.0",
		"@types/lodash": "^4.17.7",
		"@types/mocha": "^10.0.10",
		"@types/node": "^12.12.0",
		"@types/vscode": "^1.81.0",
		"@vscode/test-web": "*",
		"buffer": "^6.0.3",
		"eslint": "^9.0.0",
		"form-data": "^4.0.0",
		"glob": "^9.0.0",
		"https-agent": "^1.0.0",
		"https-proxy-agent": "^5.0.1",
		"mocha": "^11.7.0",
		"native-ext-loader": "^2.3.0",
		"node-fetch": "^3.3.2",
		"swagger-typescript-api": "^13.0.3",
		"ts-loader": "^9.3.1",
		"ts-node": "^10.9.2",
		"typescript": "^4.7.4",
		"webpack": "^5.74.0",
		"webpack-cli": "^4.10.0"
	}
}
